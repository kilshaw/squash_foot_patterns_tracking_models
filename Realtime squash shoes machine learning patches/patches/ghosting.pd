#N canvas 791 488 2201 978 12;
#X obj 30 700 ml.knn;
#X text 30 15 K Nearest Neighbour;
#X text 30 45 For more information on the technique used \, see: http://www.nickgillian.com/wiki/pmwiki.php/GRT/KNN
;
#X msg 180 105 add 1 0.2 0.7 0.3 0.1;
#X text 490 105 list comprising a class id followed by n features \,
<class> <feature 1> <feature 2> etc;
#X msg 180 155 write /path/to/my_ml-lib_data;
#X text 490 155 write training data and / or model \, first argument
gives path to write file;
#X msg 180 205 read /path/to/my_ml-lib_data;
#X text 490 205 read training data and / or model \, first argument
gives path to the read file;
#X msg 180 255 train;
#X text 490 255 train the model based on vectors added with 'add';
#X msg 180 305 clear;
#X text 490 305 clear the stored training data and model;
#X msg 180 355 map 0.2 0.7 0.3 0.1;
#X text 490 355 generate the output value(s) for the input feature
vector;
#X msg 180 405 help;
#X text 490 405 post usage statement to the console;
#X msg 180 455 scaling 1;
#X text 490 455 sets whether values are automatically scaled;
#X msg 180 505 training_rate 0.1;
#X text 490 505 set the learning rate \, used to update the weights
at each step of learning algorithms such as stochastic gradient descent.
;
#X msg 180 555 min_change 1e-05;
#X text 490 555 set the minimum change that must be achieved between
two training epochs for the training to continue;
#X msg 180 605 max_iterations 100;
#X text 490 605 set the maximum number of training iterations;
#X msg 180 655 null_rejection_coeff 0.9;
#X text 490 655 set a multiplier for the NULL-rejection threshold;
#X msg 180 705 probs 0;
#X text 490 705 determines whether probabilities are sent from the
right outlet;
#X msg 180 755 null_rejection 1;
#X text 490 755 toggle NULL rejection off or on \, when 'on' classification
results below the NULL-rejection threshold will be discarded;
#X msg 180 805 k 10;
#X text 490 805 sets the K nearest neighbours that will be searched
for by the algorithm during prediction;
#X msg 180 855 min_k_search_value 1;
#X text 490 855 set the minimum K value to use when searching for the
best K value;
#X msg 180 905 max_k_search_value 10;
#X text 490 905 set the maximum K value to use when searching for the
best K value;
#X msg 180 955 best_k_value_search 0;
#X text 490 955 set whether k value search is enabled or not;
#X obj 30 780 print left;
#X obj 110 780 print right;
#X obj 994 134 ml.knn;
#X obj 1106 260 print left;
#X obj 1074 214 print right;
#X msg 599 5 add 1 0.2 0.7 0.3 0.1;
#X obj 1562 149 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 9500 1;
#X obj 1590 149 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 11800 1;
#X obj 1620 149 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 3900 1;
#X msg 1094 140 train;
#X msg 1408 293 2;
#X obj 1772 354 float;
#X obj 1729 360 float;
#X obj 1686 355 float;
#X obj 1862 352 metro 50;
#X obj 1863 335 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X msg 1407 269 1;
#X obj 1124 326 print;
#X obj 1504 378 float;
#X obj 1461 378 float;
#X obj 1419 378 float;
#X obj 1600 362 metro 50;
#X obj 1601 345 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1376 378 float;
#X msg 1408 316 3;
#X obj 1304 138 abs;
#X floatatom 1584 675 5 0 0 0 - - -;
#X obj 1565 601 expr $f1+$f2+$f3;
#X obj 36 163 ctlin 1 1;
#X floatatom 36 187 5 0 0 0 - - -;
#X floatatom 38 253 5 0 0 0 - - -;
#X floatatom 38 307 5 0 0 0 - - -;
#X obj 39 230 ctlin 2 1;
#X obj 38 283 ctlin 3 1;
#X floatatom 964 452 5 0 0 0 - - -;
#X obj 967 422 unpack 0 0;
#X obj 1074 838 noteout 1;
#X obj 1100 753 makenote 64 127;
#X msg 1090 700 57;
#X msg 1174 704 64;
#X obj 1066 593 change;
#X msg 1406 338 4;
#X obj 1804 239 float;
#X obj 1443 410 pack 0 0 0 0;
#X msg 1122 408 add \$1 \$2 \$3 \$4;
#X msg 1127 464 map \$1 \$2 \$3;
#X obj 1692 448 pack 0 0 0;
#X obj 1085 653 sel 4 2 3 1;
#X msg 1135 699 69;
#X msg 1226 709 65;
#X msg 1352 7 read ../Users/student/Desktop/squashmachinelearning/ghosting
;
#X msg 925 10 write ../Users/student/Desktop/squashmachinelearning/ghosting
;
#X obj 1324 794 ctlin 4 1;
#X obj 1331 831 ctlout 14 1;
#X obj 1459 744 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 3800 1;
#X obj 1369 567 ctlin 5 1;
#X floatatom 1365 620 5 0 0 0 - - -;
#X obj 1246 568 ctlin 6 1;
#X obj 1490 839 noteout 2;
#X obj 1518 755 makenote 127 1270;
#X connect 0 0 39 0;
#X connect 0 1 40 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 11 0 0 0;
#X connect 11 0 41 0;
#X connect 13 0 0 0;
#X connect 15 0 0 0;
#X connect 17 0 0 0;
#X connect 19 0 0 0;
#X connect 21 0 0 0;
#X connect 23 0 0 0;
#X connect 25 0 0 0;
#X connect 27 0 0 0;
#X connect 29 0 0 0;
#X connect 31 0 0 0;
#X connect 33 0 0 0;
#X connect 35 0 0 0;
#X connect 37 0 0 0;
#X connect 41 0 74 0;
#X connect 45 0 52 1;
#X connect 45 0 59 1;
#X connect 46 0 51 1;
#X connect 46 0 58 1;
#X connect 47 0 50 1;
#X connect 47 0 57 1;
#X connect 48 0 41 0;
#X connect 49 0 62 1;
#X connect 50 0 66 2;
#X connect 50 0 85 2;
#X connect 51 0 66 1;
#X connect 51 0 85 1;
#X connect 52 0 66 0;
#X connect 52 0 85 0;
#X connect 53 0 50 0;
#X connect 53 0 51 0;
#X connect 53 0 52 0;
#X connect 54 0 53 0;
#X connect 55 0 62 1;
#X connect 57 0 82 3;
#X connect 58 0 82 2;
#X connect 59 0 82 1;
#X connect 60 0 57 0;
#X connect 60 0 58 0;
#X connect 60 0 59 0;
#X connect 60 0 62 0;
#X connect 61 0 60 0;
#X connect 62 0 82 0;
#X connect 63 0 62 1;
#X connect 66 0 65 0;
#X connect 67 0 68 0;
#X connect 67 0 45 0;
#X connect 71 0 69 0;
#X connect 71 0 46 0;
#X connect 72 0 70 0;
#X connect 72 0 47 0;
#X connect 73 0 79 0;
#X connect 74 0 73 0;
#X connect 76 0 75 0;
#X connect 76 1 75 1;
#X connect 77 0 76 0;
#X connect 78 0 76 0;
#X connect 79 0 86 0;
#X connect 80 0 62 1;
#X connect 82 0 83 0;
#X connect 83 0 41 0;
#X connect 84 0 41 0;
#X connect 85 0 84 0;
#X connect 86 0 77 0;
#X connect 86 1 87 0;
#X connect 86 2 78 0;
#X connect 86 3 88 0;
#X connect 87 0 76 0;
#X connect 88 0 76 0;
#X connect 89 0 41 0;
#X connect 90 0 41 0;
#X connect 91 0 92 0;
#X connect 93 0 92 0;
#X connect 94 0 95 0;
#X connect 94 0 98 0;
#X connect 96 0 98 0;
#X connect 98 0 97 0;
#X connect 98 1 97 1;
